#!/usr/bin/env python3

import argparse
import os
from pathlib import Path
import subprocess
import sys


def run(repo=None):
    password = None
    if repo is None:
        repo = os.environ.get('RESTIC_REPOSITORY')
    if repo is not None:
        repo = Path(repo)
        gpgfile = repo.with_suffix('.gpg')
        if gpgfile.exists():
            proc = subprocess.run(['gpg', '-d', gpgfile],
                                  stdout=subprocess.PIPE,
                                  universal_newlines=True)
            password = proc.stdout.rstrip()
    if password is None:
        env = os.environ
    else:
        env = {'RESTIC_PASSWORD': password, **os.environ}
    command = sys.argv[1:]
    proc = subprocess.run(['restic'] + command, env=env)
    return proc.returncode


def parser():
    '''Return the command line parser for the application.'''
    parser = argparse.ArgumentParser(
        usage='%(prog)s command [arguments]',
        description='Wrap command heptio-authenticator-aws',
        add_help=False)
    parser.add_argument(
        '-r', '--repo',
        help='repository to backup to or restore from')
    return parser


if __name__ == '__main__':
    (args, _) = parser().parse_known_args()
    sys.exit(run(**vars(args)))
